import buildSrc.BuildSrcPlugin

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */
/**
 * gradle assemble 命令在kotlin java 项目中可以构建所有产品 zip tar jar xxx.sh xxx.bat
 * 其中tar zip 文件解压 既可以通过运行 其bin 目录中的 .bat .sh 脚本即可以运行该项目
 *
 */
plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.3.41"
    // Apply the application plugin to add support for building a CLI application.
    application
}

apply{
    type(BuildSrcPlugin::class)
}



repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    implementation("com.alibaba:easyexcel:2.2.3")

    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")

    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")
}

application {
    // Define the main class for the application
    mainClassName = "com.github.hunter524.forlove.AppKt"
    version = "0.0.1"
    group = "com.github.hunter524"
}


// fat jar
// https://docs.gradle.org/current/userguide/working_with_files.html#sec:creating_uber_jar_example
tasks.register<Jar>("fatJar") {

    manifest {
        attributes("Main-Class" to "com.github.hunter524.forlove.AppKt")
    }

    archiveClassifier.set("fat")

    from(sourceSets.main.get().output)

    dependsOn(configurations.runtimeClasspath)
    from({
        configurations.runtimeClasspath.get().filter { it.name.endsWith("jar") }.map { zipTree(it) }
    })
}
